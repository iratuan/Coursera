#BlueJ class context
comment0.target=Week03Solution
comment1.params=
comment1.target=void\ info()
comment1.text=\r\n\ \ \ \ public\ void\ q01()\ {\r\n\ \ \ \ \ \r\n\ \ \ \ \ \ \ \ for(CSVRecord\ record\ \:\ parser){\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ String\ value\ \=\ record.get("Exports");\r\n\ \ \ \ \ \ \ \ \ \ \ \ if(value.contains("cotton")\ &&\ value.contains("flowers")){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println(record.get("Country"));\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ /**\r\n\ \ \ \ \r\n\ \ \ \ public\ void\ q02()\ {\r\n\ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ for(CSVRecord\ record\ \:\ parser){\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ String\ value\ \=\ record.get("Exports");\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ if(value.contains("cocoa")){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ qtd\ ++;\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ System.out.println\ ("--------------------------------");\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ System.out.println\ ("Q03\:\ "\ +\ qtd);\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ }\r\n\ \ \ \ \r\n\r\n\ \ \ \ \ \ public\ void\ q04()\ {\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ System.out.println\ ("--------------------------------");\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ System.out.println\ ("Q04\:\ "\ +\ qtd);\r\n\ \ \ \ \ \ \ \ for(CSVRecord\ record\ \:\ parser){\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ String\ value\ \=\ record.get("Time\ EST");\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ if(value.length()\ >\ 17){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println(record.get("Country")\ +\ "\ -\ "\ +\ value);\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ \r\n\ \ \ \ \r\n\ \ \ \ \r\n\ \ \ \ public\ void\ listExporters(CSVParser\ parser,\ String\ exportOfInterest)\ {\r\n\ \ \ \ \ \ \ \ //for\ each\ row\ in\ the\ CSV\ File\r\n\ \ \ \ \ \ \ \ for(CSVRecord\ record\ \:\ parser){\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ String\ export\ \=\ record.get("Exports");\r\n\ \ \ \ \ \ \ \ \ \ \ \ String[]\ params\ \=\ exportOfInterest.split(",");\r\n\ \ \ \ \ \ \ \ \ \ \ \ int\ count\ \=\ 0;\r\n\ \ \ \ \ \ \ \ \ \ \ \ for(String\ p\ \:\ params){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if(export.indexOf(p)\ \!\=\ -1){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ count\ ++;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ if(count\ \=\=\ params.length){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println(record.get("Country"));\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \r\n\r\n\ \ \ \ }\r\n\r\n\ \ \ \ public\ void\ q05()\ {\r\n\ \ \ \ \ \ \ \ //for\ each\ row\ in\ the\ CSV\ File\r\n\ \ \ \ \ \ \ \ int\ lower\ \=\ 999;\r\n\ \ \r\n\ \ \ \ \ \ \ \ for(CSVRecord\ record\ \:\ parser){\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ String\ value\ \=\ record.get("Humidity");\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ if(Integer.parseInt(value)\ <\ lower){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ lower\ \=\ Integer.parseInt(value);\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ System.out.println\ ("--------------------------------");\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ System.out.println\ ("Q05\:\ "\ +\ lower);\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ public\ void\ q06()\ {\r\n\ \ \ \ \ \ \ \ //for\ each\ row\ in\ the\ CSV\ File\r\n\ \ \ \ \ \ \ \ int\ lower\ \=\ 999;\r\n\ \ \ \ \ \ \ \ String\ date\ \=\ "";\r\n\ \ \r\n\ \ \ \ \ \ \ \ for(CSVRecord\ record\ \:\ parser){\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ Integer\ value\ \=\ Integer.parseInt(record.get("Humidity"));\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ if(value\ <\ lower){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ lower\ \=\ value;\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ date\ \=\ \ record.get("TimeEDT");\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ System.out.println\ ("--------------------------------");\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ System.out.println\ ("Q05\:\ "\ +\ lower);\r\n\ \ \ \ \ \ \ System.out.println\ ("Date\:\ "\ +\ date);\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ \ \ public\ void\ q08()\ {\r\n\ \ \ \ \ \ \ \ //for\ each\ row\ in\ the\ CSV\ File\r\n\ \ \ \ \ \ \ \ Float\ total\ \=\ 0f;\r\n\ \ \ \ \ \ \ \ Float\ lower\ \=\ 999f;\r\n\ \ \ \ \ \ \ \ Float\ high\ \=\ -999f;\r\n\ \ \ \ \ \ \ \ String\ date_lower\ \=\ "";\r\n\ \ \ \ \ \ \ \ String\ date_high\ \=\ "";\r\n\ \ \ \ \ \ \ \ Integer\ cont\ \=\ 0;\r\n\ \ \ \ \ \ \ \ Float\ mean\ \=\ 0f;\r\n\ \ \r\n\ \ \ \ \ \ \ \ for(CSVRecord\ record\ \:\ parser){\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ Float\ value\ \=\ Float.parseFloat(record.get("TemperatureF"));\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ if(value\ <\=\ lower){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ lower\ \=\ value;\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ date_lower\ \=\ \ record.get("TimeEDT");\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ if(value\ >\=\ high){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ high\ \=\ value;\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ date_high\ \=\ \ record.get("TimeEDT");\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ cont\ ++;\r\n\ \ \ \ \ \ \ \ \ \ \ \ total\ +\=\ value;\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ mean\ \=\ total\ /\ cont;\r\n\ \ \ \ \ \ \ System.out.println\ ("--------------------------------");\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ System.out.println\ ("Q08\:");\r\n\ \ \ \ \ \ \ System.out.println\ ("Mean\:\ "\ +\ mean);\r\n\ \ \ \ \ \ \ System.out.println\ ("Lower\:\ "\ +\ lower);\r\n\ \ \ \ \ \ \ System.out.println\ ("High\:\ "\ +\ high);\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ public\ void\ q09()\ {\r\n\ \ \ \ \ \ \ \ //for\ each\ row\ in\ the\ CSV\ File\r\n\ \ \ \ \ \ \ \ Float\ total\ \=\ 0f;\r\n\ \ \ \ \ \ \ \ Float\ lower\ \=\ 999f;\r\n\ \ \ \ \ \ \ \ Float\ high\ \=\ -999f;\r\n\ \ \ \ \ \ \ \ String\ date_lower\ \=\ "";\r\n\ \ \ \ \ \ \ \ String\ date_high\ \=\ "";\r\n\ \ \ \ \ \ \ \ Integer\ cont\ \=\ 0;\r\n\ \ \ \ \ \ \ \ Float\ mean\ \=\ 0f;\r\n\ \ \r\n\ \ \ \ \ \ \ \ for(CSVRecord\ record\ \:\ parser){\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ Float\ value\ \=\ Float.parseFloat(record.get("TemperatureF"));\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ if(value\ >\=\ 80){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ if(value\ <\=\ lower){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ lower\ \=\ value;\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ date_lower\ \=\ \ record.get("TimeEDT");\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ if(value\ >\=\ high){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ high\ \=\ value;\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ date_high\ \=\ \ record.get("TimeEDT");\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ cont\ ++;\r\n\ \ \ \ \ \ \ \ \ \ \ \ total\ +\=\ value;}\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ mean\ \=\ total\ /\ cont;\r\n\ \ \ \ \ \ \ System.out.println\ ("--------------------------------");\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ System.out.println\ ("Q09\:");\r\n\ \ \ \ \ \ \ System.out.println\ ("Mean\:\ "\ +\ mean);\r\n\ \ \ \ \ \ \ System.out.println\ ("Lower\:\ "\ +\ lower);\r\n\ \ \ \ \ \ \ System.out.println\ ("High\:\ "\ +\ high);\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ }\r\n\ \ \ \ \r\n
comment2.params=
comment2.target=void\ whoExports()
numComments=3
